@use 'sass:map';
@use 'flexy-sys-color' as *;
@use 'flexy-sys-motion' as *;
@use 'flexy-sys-palette' as *;
@use 'flexy-sys-ref' as *;
@use 'flexy-sys-shape' as *;

$_flexy-comp-slider: (
  focus-ring-color: $flexy-sys-color-primary,
  thumb-outline-width: 0px,
  thumb-outline-color: $flexy-sys-color-primary,
  thumb-color: $flexy-sys-color-primary,
  thumb-height: 16px,
  thumb-shape: 8px,
  thumb-width: 16px,
  thumb-icon-color: $flexy-sys-color-on-primary,
  track-active-color: $flexy-sys-color-primary,
  track-height: 4px,
  track-inactive-color: $flexy-sys-palette-grey-20,
  track-shape: 2px,
  ticks-active-color: $flexy-sys-color-on-primary,
  ticks-inactive-color: $flexy-sys-palette-grey-80,
  ticks-size: 2px,
  value-indicator-arrow-size: 6px,
  value-indicator-height: 24px,
  value-indicator-width: 32px,
  value-indicator-shape: map.get($flexy-sys-shape, 'small'),
  value-indicator-fill-color: $flexy-sys-color-primary,
  value-indicator-text-color: $flexy-sys-color-on-primary,
  value-indicator-text-size: 13px,
  value-indicator-m3-size: 28px,
  animation-jumping-duration: 0ms,
  animation-jumping-easing: $flexy-sys-motion-ease-out-cubic,
  animation-sliding-duration: 0ms,
  animation-sliding-easing: ease,
);

$flexy-comp-slider: ();

@each $name, $value in $_flexy-comp-slider {
  @if not $flexy-sys-ref-hardcode-values {
    $value: var(--flexy-comp-slider-#{$name}, #{$value});
  }
  $flexy-comp-slider: map.set($flexy-comp-slider, $name, $value);
}
